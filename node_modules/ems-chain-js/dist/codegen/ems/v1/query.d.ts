import { Params, ParamsAmino, ParamsSDKType } from "./genesis";
import { Event, EventAmino, EventSDKType } from "./ems";
import { BinaryReader, BinaryWriter } from "../../binary";
/** QueryParamsRequest is the request type for the Query/Params RPC method. */
export interface QueryParamsRequest {
}
export interface QueryParamsRequestProtoMsg {
    typeUrl: "/ems.v1.QueryParamsRequest";
    value: Uint8Array;
}
/** QueryParamsRequest is the request type for the Query/Params RPC method. */
export interface QueryParamsRequestAmino {
}
export interface QueryParamsRequestAminoMsg {
    type: "/ems.v1.QueryParamsRequest";
    value: QueryParamsRequestAmino;
}
/** QueryParamsRequest is the request type for the Query/Params RPC method. */
export interface QueryParamsRequestSDKType {
}
/** QueryParamsResponse is the response type for the Query/Params RPC method. */
export interface QueryParamsResponse {
    /** params defines the parameters of the module. */
    params?: Params;
}
export interface QueryParamsResponseProtoMsg {
    typeUrl: "/ems.v1.QueryParamsResponse";
    value: Uint8Array;
}
/** QueryParamsResponse is the response type for the Query/Params RPC method. */
export interface QueryParamsResponseAmino {
    /** params defines the parameters of the module. */
    params?: ParamsAmino;
}
export interface QueryParamsResponseAminoMsg {
    type: "/ems.v1.QueryParamsResponse";
    value: QueryParamsResponseAmino;
}
/** QueryParamsResponse is the response type for the Query/Params RPC method. */
export interface QueryParamsResponseSDKType {
    params?: ParamsSDKType;
}
/** QueryParamsRequest is the request type for the Query/Params RPC method. */
export interface QueryGetEventRequest {
    id: string;
}
export interface QueryGetEventRequestProtoMsg {
    typeUrl: "/ems.v1.QueryGetEventRequest";
    value: Uint8Array;
}
/** QueryParamsRequest is the request type for the Query/Params RPC method. */
export interface QueryGetEventRequestAmino {
    id?: string;
}
export interface QueryGetEventRequestAminoMsg {
    type: "/ems.v1.QueryGetEventRequest";
    value: QueryGetEventRequestAmino;
}
/** QueryParamsRequest is the request type for the Query/Params RPC method. */
export interface QueryGetEventRequestSDKType {
    id: string;
}
/** QueryParamsResponse is the response type for the Query/Params RPC method. */
export interface QueryGetEventResponse {
    event?: Event;
}
export interface QueryGetEventResponseProtoMsg {
    typeUrl: "/ems.v1.QueryGetEventResponse";
    value: Uint8Array;
}
/** QueryParamsResponse is the response type for the Query/Params RPC method. */
export interface QueryGetEventResponseAmino {
    event?: EventAmino;
}
export interface QueryGetEventResponseAminoMsg {
    type: "/ems.v1.QueryGetEventResponse";
    value: QueryGetEventResponseAmino;
}
/** QueryParamsResponse is the response type for the Query/Params RPC method. */
export interface QueryGetEventResponseSDKType {
    event?: EventSDKType;
}
export declare const QueryParamsRequest: {
    typeUrl: string;
    encode(_: QueryParamsRequest, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): QueryParamsRequest;
    fromPartial(_: Partial<QueryParamsRequest>): QueryParamsRequest;
    fromAmino(_: QueryParamsRequestAmino): QueryParamsRequest;
    toAmino(_: QueryParamsRequest): QueryParamsRequestAmino;
    fromAminoMsg(object: QueryParamsRequestAminoMsg): QueryParamsRequest;
    fromProtoMsg(message: QueryParamsRequestProtoMsg): QueryParamsRequest;
    toProto(message: QueryParamsRequest): Uint8Array;
    toProtoMsg(message: QueryParamsRequest): QueryParamsRequestProtoMsg;
};
export declare const QueryParamsResponse: {
    typeUrl: string;
    encode(message: QueryParamsResponse, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): QueryParamsResponse;
    fromPartial(object: Partial<QueryParamsResponse>): QueryParamsResponse;
    fromAmino(object: QueryParamsResponseAmino): QueryParamsResponse;
    toAmino(message: QueryParamsResponse): QueryParamsResponseAmino;
    fromAminoMsg(object: QueryParamsResponseAminoMsg): QueryParamsResponse;
    fromProtoMsg(message: QueryParamsResponseProtoMsg): QueryParamsResponse;
    toProto(message: QueryParamsResponse): Uint8Array;
    toProtoMsg(message: QueryParamsResponse): QueryParamsResponseProtoMsg;
};
export declare const QueryGetEventRequest: {
    typeUrl: string;
    encode(message: QueryGetEventRequest, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): QueryGetEventRequest;
    fromPartial(object: Partial<QueryGetEventRequest>): QueryGetEventRequest;
    fromAmino(object: QueryGetEventRequestAmino): QueryGetEventRequest;
    toAmino(message: QueryGetEventRequest): QueryGetEventRequestAmino;
    fromAminoMsg(object: QueryGetEventRequestAminoMsg): QueryGetEventRequest;
    fromProtoMsg(message: QueryGetEventRequestProtoMsg): QueryGetEventRequest;
    toProto(message: QueryGetEventRequest): Uint8Array;
    toProtoMsg(message: QueryGetEventRequest): QueryGetEventRequestProtoMsg;
};
export declare const QueryGetEventResponse: {
    typeUrl: string;
    encode(message: QueryGetEventResponse, writer?: BinaryWriter): BinaryWriter;
    decode(input: BinaryReader | Uint8Array, length?: number): QueryGetEventResponse;
    fromPartial(object: Partial<QueryGetEventResponse>): QueryGetEventResponse;
    fromAmino(object: QueryGetEventResponseAmino): QueryGetEventResponse;
    toAmino(message: QueryGetEventResponse): QueryGetEventResponseAmino;
    fromAminoMsg(object: QueryGetEventResponseAminoMsg): QueryGetEventResponse;
    fromProtoMsg(message: QueryGetEventResponseProtoMsg): QueryGetEventResponse;
    toProto(message: QueryGetEventResponse): Uint8Array;
    toProtoMsg(message: QueryGetEventResponse): QueryGetEventResponseProtoMsg;
};
