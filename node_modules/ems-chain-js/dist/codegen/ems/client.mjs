import { Registry } from "@cosmjs/proto-signing";
import { defaultRegistryTypes, AminoTypes, SigningStargateClient } from "@cosmjs/stargate";
import * as emsV1TxRegistry from "./v1/tx.registry";
import * as emsV1TxAmino from "./v1/tx.amino";
export const emsAminoConverters = {
    ...emsV1TxAmino.AminoConverter
};
export const emsProtoRegistry = [...emsV1TxRegistry.registry];
export const getSigningEmsClientOptions = ({ defaultTypes = defaultRegistryTypes } = {}) => {
    const registry = new Registry([...defaultTypes, ...emsProtoRegistry]);
    const aminoTypes = new AminoTypes({
        ...emsAminoConverters
    });
    return {
        registry,
        aminoTypes
    };
};
export const getSigningEmsClient = async ({ rpcEndpoint, signer, defaultTypes = defaultRegistryTypes }) => {
    const { registry, aminoTypes } = getSigningEmsClientOptions({
        defaultTypes
    });
    const client = await SigningStargateClient.connectWithSigner(rpcEndpoint, signer, {
        registry: registry,
        aminoTypes
    });
    return client;
};
//# sourceMappingURL=client.js.map